editOptions = editToolbarOptions(edit = FALSE, selectedPathOptions = selectedPathOptions()))
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/dainaandries/cjxe6ve8w0edx1cpuddh6l5cu/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZGFpbmFhbmRyaWVzIiwiYSI6ImNqeGR0OGk5czA0M2gzc3BidXcydXE5YXYifQ.I0GBgTVXILAC1C5_AlZ5Dg"
, attribution = "MapBox") %>%
# addProviderTiles("MapBox",
#                  options = providerTileOptions(id = "mapbox.satellite", noWrap = FALSE,
#                                                accessToken = "pk.eyJ1IjoiZGFpbmFhbmRyaWVzIiwiYSI6ImNqeGR0OGk5czA0M2gzc3BidXcydXE5YXYifQ.I0GBgTVXILAC1C5_AlZ5Dg")) %>%
addRasterImage(precip, layerId= "Rainfall"
, colors=rgb(0/555, 1:445/450, 5/100), opacity = 0.0) %>%
addRasterImage(raster_layer, layerId= "Elevation"
, colors=rgb(375/555, 1:445/450, 5/100), opacity = 0) %>%
addMouseCoordinates() %>%
leafem::addImageQuery(raster_layer, type="mousemove", layerId = "Elevation"
, position = "topright") %>%
# addLegend(pal = pal, values = raster_values[!is.na(raster_values)],
#           title = "Rainfall (mm)") %>%
addCircles(data = nepal_landslides,
radius = 1000,
lat = nepal_landslides$latitude,
lng = nepal_landslides$longitude,
fillColor = "white",
fillOpacity = 1,
color = "wheat",
weight = 2,
stroke = T,
layerId = as.character(nepal_landslides$objectid),
highlightOptions = highlightOptions(color = "brown",
opacity = 1.0,
weight = 2,
bringToFront = TRUE)) %>%
addDrawToolbar(
polylineOptions=FALSE,
markerOptions = FALSE,
circleMarkerOptions = FALSE,
polygonOptions = drawPolygonOptions(shapeOptions=drawShapeOptions(fillOpacity = 0
,color = 'white'
,weight = 3)),
rectangleOptions = drawRectangleOptions(shapeOptions=drawShapeOptions(fillOpacity = 0
,color = 'white'
,weight = 3)),
circleOptions = FALSE,
editOptions = editToolbarOptions(edit = FALSE, selectedPathOptions = selectedPathOptions()))
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/dainaandries/cjxe6ve8w0edx1cpuddh6l5cu/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZGFpbmFhbmRyaWVzIiwiYSI6ImNqeGR0OGk5czA0M2gzc3BidXcydXE5YXYifQ.I0GBgTVXILAC1C5_AlZ5Dg"
, attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
# addProviderTiles("MapBox",
#                  options = providerTileOptions(id = "mapbox.satellite", noWrap = FALSE,
#                                                accessToken = "pk.eyJ1IjoiZGFpbmFhbmRyaWVzIiwiYSI6ImNqeGR0OGk5czA0M2gzc3BidXcydXE5YXYifQ.I0GBgTVXILAC1C5_AlZ5Dg")) %>%
addRasterImage(precip, layerId= "Rainfall"
, colors=rgb(0/555, 1:445/450, 5/100), opacity = 0.0) %>%
addRasterImage(raster_layer, layerId= "Elevation"
, colors=rgb(375/555, 1:445/450, 5/100), opacity = 0) %>%
addMouseCoordinates() %>%
leafem::addImageQuery(raster_layer, type="mousemove", layerId = "Elevation"
, position = "topright") %>%
# addLegend(pal = pal, values = raster_values[!is.na(raster_values)],
#           title = "Rainfall (mm)") %>%
addCircles(data = nepal_landslides,
radius = 1000,
lat = nepal_landslides$latitude,
lng = nepal_landslides$longitude,
fillColor = "white",
fillOpacity = 1,
color = "wheat",
weight = 2,
stroke = T,
layerId = as.character(nepal_landslides$objectid),
highlightOptions = highlightOptions(color = "brown",
opacity = 1.0,
weight = 2,
bringToFront = TRUE)) %>%
addDrawToolbar(
polylineOptions=FALSE,
markerOptions = FALSE,
circleMarkerOptions = FALSE,
polygonOptions = drawPolygonOptions(shapeOptions=drawShapeOptions(fillOpacity = 0
,color = 'white'
,weight = 3)),
rectangleOptions = drawRectangleOptions(shapeOptions=drawShapeOptions(fillOpacity = 0
,color = 'white'
,weight = 3)),
circleOptions = FALSE,
editOptions = editToolbarOptions(edit = FALSE, selectedPathOptions = selectedPathOptions()))
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
?raster
?rasterToPoints
r = rasterToPoints(raster_layer)
r
View(r)
runApp('landslides_nepal.R')
View(r)
round(1.2, 0)
runApp('landslides_nepal.R')
raster_sp_df = as.data.frame(rasterToPoints(raster_layer))
runApp('landslides_nepal.R')
View(raster_sp_df)
View(raster_sp_df)
View(raster_sp_df)
View(raster_sp_df)
runApp('landslides_nepal.R')
View(raster_sp_df)
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
raster_poly <- rasterToPolygons(raster_layer)
library(shiny); runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
View(landslides)
View(landslides)
runApp('landslides_nepal.R')
nepal_landslides <- subset(landslides, countrynam=='Nepal')
nepal_landslides$distance
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
?addRasterImage
runApp('landslides_nepal.R')
install.packages('leaflet.opacity')
library(leaflet.opacity)
?addOpacitySlider
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
?addLegend
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
library(shinyjs)
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
library(htmlwidgets)
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
View(nepal_landslides)
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
?dateRangeInput
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
nepal_landslides$date_date_
class(nepal_landslides$date_date_[1])
class(nepal_landslides$date_date_[[1]])
nepal_landslides$date_date_ <- as.character(nepal_landslides$date_date_)
class(nepal_landslides$date_date_)
nepal_landslides$date_date_
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
library(stringr)
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
nepal_landslides$date_date_ <- as.Date(nepal_landslides$date_date_)
View(nepal_landslides)
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
?clearShapes
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
runApp('landslides_nepal.R')
setwd("~/vizrisk_nepal")
runApp('Documents/blogs/landslides/nepal_landslide_risk')
setwd("~/Documents/blogs/landslides/nepal_landslide_risk")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Documents/JPTC/jptc_portfolio_builder.r')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Documents/JPTC/jptc_shiny.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?addMouseCoordinates
runApp()
runApp()
shape <- readOGR(dsn="./GlobalLandslideCatalog")
precip <- raster("Nepal_Precip.gri")
setwd("~/Documents/blogs/landslides")
precip <- raster("Nepal_Precip.gri")
raster_layer <- raster('Nepal_Elevations.gri')
raster_layer <- raster('Nepal_Elevations.gri')
setwd("~/Documents/blogs/landslides/nepal_landslide_risk")
precip <- raster("Nepal_Precip.gri")
?raster
precip <- raster::raster("Nepal_Precip.gri")
precip <- rgdal::raster("Nepal_Precip.gri")
raster('Nepal_Precip.gri')
raster('Nepal_Precip.tiff')
precip <- raster("Nepal_Precip.gri")
raster_layer <- raster('Nepal_Elevations.gri')
runApp()
runApp()
runApp()
?panel
runApp()
runApp()
runApp()
runApp()
runApp()
View(precip)
precip
precip$Annual_Precip
precip['values']
precip$values
values(precip)
Precip.Distribution <- precip[!is.na(precip)]
hist(Precip.Distribution, col='lightblue'
, main="Annual Precipitation in Nepal, 1980-2000"
, xlab="Rainfall (mm)")
hist(Precip.Distribution, prob=TRUE, col='lightblue'
, main="Annual Precipitation in Nepal, 1980-2000"
, xlab="Rainfall (mm)")
lines(density(Precip.Distribution), col="blue", lwd=2)
lines(density(Precip.Distribution, adjust=5), col="darkgreen", lwd=2, lty="dotted")
hist(Precip.Distribution, col='lightblue'
, main="Annual Precipitation in Nepal, 1980-2000"
, xlab="Rainfall (mm)")
hist(Precip.Distribution, prob=TRUE, col='lightblue'
, main="Annual Precipitation in Nepal, 1980-2000"
, xlab="Rainfall (mm)")
lines(density(Precip.Distribution, adjust=5), col="darkgreen", lwd=2, lty="dotted")
runApp()
runApp()
library(sp)
?sp
?sf
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(nepal_landslides)
View(nepal_landslides)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(nepal_landslides)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("modules")
library(modules)
runApp()
?validateCssUnit
runApp()
?import
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
months <- c("01" , "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")
months <- c("01" , "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")
names(months) <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
months
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(rgdal)
library(leaflet)
library(geoshaper)
library(raster)
library(leafem)
library(leaflet.extras)
library(leaflet.mapboxgl)
library(leaflet.opacity)
library(htmltools)
library(htmlwidgets)
library(shinythemes)
library(DT)
library(modules)
m <- modules::use('dropdown.R')
shape <- readOGR(dsn="./GlobalLandslideCatalog")
precip <- raster("Nepal_Precip.gri")
raster_layer <- raster('Nepal_Elevations.gri')
landslides <- shape@data
months <- c("01" , "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12")
names(months) <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
?colorNumeric
nepal_landslides <- subset(landslides, countrynam=='Nepal')
class(nepal_landslides$date_date_)
# nepal_landslides$month <- strsplit(nepal_landslides$date_date_, "-")
# print(nepal_landslides$month)
nepal_landslides$month <- strsplit(as.character(nepal_landslides$date_date_), "-")
View(nepal_landslides)
runApp()
# nepal_landslides$month <- strsplit(nepal_landslides$date_date_, "-")
# print(nepal_landslides$month)
nepal_landslides$month <- strsplit(as.character(nepal_landslides$date_date_), "/")
# nepal_landslides$month <- strsplit(nepal_landslides$date_date_, "-")
# print(nepal_landslides$month)
nepal_landslides$month <- strsplit(as.character(nepal_landslides$date_date_), "/")[2]
# nepal_landslides$month <- strsplit(nepal_landslides$date_date_, "-")
# print(nepal_landslides$month)
nepal_landslides$month <- strsplit(as.character(nepal_landslides$date_date_), "/")[2]
# nepal_landslides$month <- strsplit(nepal_landslides$date_date_, "-")
# print(nepal_landslides$month)
nepal_landslides$month <- strsplit(as.character(nepal_landslides$date_date_), "/")[[2]]
x <- c(1,1,3,)
x <- c(1,1,3,23)
x[3]
# nepal_landslides$month <- strsplit(nepal_landslides$date_date_, "-")
# print(nepal_landslides$month)
nepal_landslides$month <- strsplit(as.character(nepal_landslides$date_date_), "/")
nepal_landslides$month <- sapply(nepal_landslides$month, function(x) x[2])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shape <- readOGR(dsn="./GlobalLandslideCatalog")
landslides <- shape@data
colnames(landslides)
colnames(data.frame()) <- colnames(landslides)
x <- data.frame()
x
colnames(x) <- colnames(landslides)
x <- data.frame(matrix(ncol = length(colnames(landslides))))
x
View(x)
x <- data.frame(matrix(ncol = length(colnames(landslides)), nrow=0))
x
View(x)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?panel
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shape <- readOGR(dsn="./GlobalLandslideCatalog")
shape <- readOGR(dsn="./GlobalLandslideCatalog")
landslides <- shape@data
View(landslides)
landslides$population <- format(landslides$population, big.mark = ",")
View(landslides)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
